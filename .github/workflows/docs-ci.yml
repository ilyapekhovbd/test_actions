# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Automation API Internal/Public Docs Continuous Integration

on:
  push:
    branches: [develop, production]
    paths:
      - 'docs/**'
  pull_request:
    branches: [develop]
    paths:
      - 'docs/**'

env:
  GITHUB_TOKEN: ${{ secrets.AUTOMATE_GITHUB_ACCESS_TOKEN }}
  ANSIBLE_VAULT_PASSWORD: ${{ secrets.AUTOMATE_ANSIBLE_VAULT_PASSWORD }}
  ANSIBLE_INVENTORY_NAME: ${{ github.ref_name == 'production' && 'production' || 'staging' }}


jobs:
  dummy_check:
    name: check
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "Dummy check to pass required \"production\" github checks on docs change"'

  dummy_bandit_check:
    name: check (make bandit)
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "Dummy make bandit check to pass required \"develop\" github checks on docs change"'

  dummy_flake8_check:
    name: check (make flake8)
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "Dummy make flake8 check to pass required \"develop\" github checks on docs change"'

  dummy_mypy_check:
    name: check (make mypy)
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "Dummy make mypy check to pass required \"develop\" github checks on docs change"'

  dummy_safety_check:
    name: check (make safety)
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "Dummy make safety check to pass required \"develop\" github checks on docs change"'

  dummy_test_check:
    name: check (make test)
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "Dummy make test check to pass required \"develop\" github checks on docs change"'

  check_deploy_docs:
    name: check and deploy [docs]
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      DB_USER: adjust_dash_automation
      DB_PASSWORD: adjust_dash_automation
      DB_NAME: adjust_dash_automation
      # it's test secret key
      SECRET_KEYS: '["4MneCi4AvpymiRd2NnlNE3O9OgQ658HXmsHHxPb4x2I="]'
      EVENT_MAPPING_SERVICE_TOKEN: ''
      AWS_ACCESS_KEY_ID: ''
      AWS_SECRET_ACCESS_KEY: ''
      AWS_STORAGE_BUCKET_NAME: ''
      DELETE_APP_PERMISSION_KEY: '123'
      INTERNAL_PERMISSION_KEY: 'RR123'
      LEGACY_SECRET: 'local_django_secret'
      PUBLIC_PATH_URL: '/control-center/adjust-app-automation'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run flake8
        id: run_checks
        run: |
          make flake8-docs

      - name: 'Build: ${{env.ANSIBLE_INVENTORY_NAME}} Internal/Public Docs'
        if: github.event_name == 'push'
        run: |
          make docs-build
          make docs-public-build

      - name: 'Move Docs assets to tmp folder'
        if: github.event_name == 'push'
        run: |
          mv ./docs/build/html /tmp/docs
          mv ./docs/build-public/html /tmp/public_docs

      - name: Clone cc-ansible
        if: github.event_name == 'push'
        uses: actions/checkout@v2
        with:
          repository: adjust/cc-ansible
          token: ${{ secrets.AUTOMATE_GITHUB_ACCESS_TOKEN }}

      - name: Install SSH key
        if: github.event_name == 'push'
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.AUTOMATE_DEPLOY_SSH_KEY }}
          known_hosts: ${{ secrets.AUTOMATE_DEPLOY_KNOWN_HOSTS }}
          config: |
            Host *.adjust.com
            User acquired

      - name: 'Deploy: ${{env.ANSIBLE_INVENTORY_NAME}} Internal/Public Docs'
        if: github.event_name == 'push'
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          retry_on: timeout
          command: >
            ansible-playbook -v -i ${{env.ANSIBLE_INVENTORY_NAME}} playbooks/adjust-app-automation/frontend-admin.yml 
            --extra-vars source_private_dir=/tmp/docs 
            --extra-vars source_public_dir=/tmp/public_docs
